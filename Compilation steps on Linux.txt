==================================================================
MAKE SURE YOU SETUP ALL DEPENDENCIES BEFORE YOU ATTEMPT TO COMPILE
==================================================================

(in case pkgconfig is not present on system.)

sudo apt install pkg-config
==================================================================

(in case boost is not present on system.)

sudo apt install libboost-all-dev
==================================================================

(in case ICU is not present on system.)

sudo apt-get install libicu-dev
==================================================================
(in case ssl is not present on system.)

sudo apt install libssl-dev
==================================================================
(in case Qt 6.9 is not present on system.)

sudo apt install qt6-base-dev qt6-base-dev-tools qt6-tools-dev qt6-tools-dev-tools

(Qt Path Hints (if using Qt installed outside system packages)):
cmake -DCMAKE_PREFIX_PATH="/home/youruser/Qt/6.9.0/gcc_64" ..

(Or set CMAKE_PREFIX_PATH in your environment).
==================================================================
(in case qtchooser (uic) is not present on system.)

1- sudo apt install qtchooser
==================================================================
(in case libbcrypt.so is not present on system.)

(-- Extract bcrypt.7z, then navigate to it, and perform both commands below. --)

gcc -shared -fPIC -o libbcrypt.so bcrypt.c

sudo cp libbcrypt.so /usr/local/lib
==================================================================
(in case libsodium is not present on system.)

sudo apt install libsodium-dev
==================================================================
(in case libargon2 is not present on system.)

sudo apt install libargon2-dev

==================================================================
ONCE YOU FINISH SETTING UP ALL DEPENDENCIES
==================================================================
Then you do below commands to COMPILE using CMake (automated setup):

1- mkdir -p build && build

2- Use CMake
	For Release build:
cmake -DCMAKE_BUILD_TYPE=Release ..
	For Debug build:
cmake -DCMAKE_BUILD_TYPE=Debug ..

3- make -j$(nproc)

To switch between cmake build types:

1- enter the cmake build type command as shown above in step 2

2- make clean

3- make

==================================================================
IMPORTANT, DO NOT IGNORE OR YOUR CLIENT WILL PROBABLY CRASH
==================================================================

Do not forget to modify the location of the client's wordlist when
changing between OSes and different machines by modifying
the config.ini and server.ini files, also make sure that the ip
of the server and port match properly.


==================================================================
MANUAL COMPILATION WITHOUT CMAKE (IGNORE BELOW UNLESS IF EXPERT.)
==================================================================

(Create build folder and navigate inside it and run to compile client CLI):

g++ -o ScrutaNetClientCLI ../ScrutaNet-Client-CLI/ScrutaNet-Client-CLI.cpp \
    -I../include -I../include/scrypt \
    -lboost_system -lssl -lcrypto -lboost_thread -lboost_chrono -lboost_locale \
    -lpthread -lbcrypt -lcrypt -largon2 -lsodium

(Do not forget to move config.ini, mutation_list.txt to build folder, then configure config.ini with wordlist path)

(Then run to compile server CLI):

g++ ../ScrutaNet-Server-CLI/ScrutaNet-Server-CLI.cpp -o ScrutaNetServerCLI -lboost_system -lboost_filesystem -lssl -lboost_thread -lboost_chrono -lboost_locale -lpthread

(Do not forget to move server.ini to build folder)

(For a few Qt6 Server GUI dependencies, run):

/usr/lib/qt6/libexec/uic ../gui/MainWindow.ui -o ../gui/ui_MainWindow.h

/usr/lib/qt6/libexec/moc ../gui/MainWindow.h -o ../moc_MainWindow.cpp

/usr/lib/qt6/libexec/moc ../core/ServerManager.h -o ../moc_ServerManager.cpp

(Then run to compile server GUI):

g++ -std=c++17 -fPIC ../main.cpp ../gui/*.cpp ../core/*.cpp ../shared/*.cpp ../moc_MainWindow.cpp ../moc_ServerManager.cpp \
    -I.. \
    `pkg-config --cflags Qt6Widgets Qt6Gui Qt6Core` \
    -lQt6Widgets -lQt6Gui -lQt6Core \
    -lboost_system -lboost_filesystem -lboost_thread -lboost_chrono -lboost_locale \
    -lssl -lcrypto \
    -lpthread -ldl \
    -o ScrutaNetServerGUI

(Do not forget to move server.ini to build folder)